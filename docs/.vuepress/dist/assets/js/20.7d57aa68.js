(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{306:function(e,t,r){e.exports=r.p+"assets/img/plugins-entry.e0f99ecc.png"},307:function(e,t,r){e.exports=r.p+"assets/img/server.ae384ff0.png"},308:function(e,t,r){e.exports=r.p+"assets/img/server-example.4670bd6e.png"},309:function(e,t,r){e.exports=r.p+"assets/img/structure.570b5699.png"},416:function(e,t,r){"use strict";r.r(t);var s=r(11),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"whistle-插件开发入门-实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whistle-插件开发入门-实践"}},[e._v("#")]),e._v(" whistle 插件开发入门 & 实践")]),e._v(" "),t("h2",{attrs:{id:"什么是-whistle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-whistle"}},[e._v("#")]),e._v(" 什么是 whistle")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://wproxy.org/whistle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle"),t("OutboundLink")],1),e._v(" 是基于 Node.js 实现的跨平台 web 调试代理工具，类似 Charles、Fiddler 等。\n常用的功能有查看、修改网络请求、响应。")]),e._v(" "),t("p",[e._v("在阅读下文之前最好对 "),t("a",{attrs:{href:"http://wproxy.org/whistle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle"),t("OutboundLink")],1),e._v(" 有一个基础的使用经验。")]),e._v(" "),t("h2",{attrs:{id:"whistle-插件简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whistle-插件简介"}},[e._v("#")]),e._v(" whistle 插件简介")]),e._v(" "),t("h3",{attrs:{id:"什么是插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是插件"}},[e._v("#")]),e._v(" 什么是插件")]),e._v(" "),t("p",[e._v("whistle 提供了强大的插件扩展能力，一个插件就是一个 npm 包，也就是 Node.js 模块。\n通过插件可以实现以下等功能。")]),e._v(" "),t("ol",[t("li",[e._v("扩展 network 右键菜单。")]),e._v(" "),t("li",[e._v("在 network / inspectors 自定义 tab。")]),e._v(" "),t("li",[e._v("作为 web 服务。")]),e._v(" "),t("li",[e._v("作为请求的中转 server（可对请求响应进行修改）。")])]),e._v(" "),t("p",[e._v("关于插件的更多功能可查看 "),t("a",{attrs:{href:"https://github.com/whistle-plugins/examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle-plugins examples"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"如何使用插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何使用插件"}},[e._v("#")]),e._v(" 如何使用插件")]),e._v(" "),t("p",[e._v("比如现在有一个叫做 whistle.modify 的插件。")]),e._v(" "),t("h4",{attrs:{id:"安装插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装插件"}},[e._v("#")]),e._v(" 安装插件")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-g")]),e._v(" whistle.modify\n")])])]),t("h4",{attrs:{id:"查看-使用插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看-使用插件"}},[e._v("#")]),e._v(" 查看 & 使用插件")]),e._v(" "),t("p",[e._v("安装成功之后，可以在 whistle 的插件管理页面中查看已经安装的插件。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(306),alt:"plugins-entry.png"}})]),e._v(" "),t("h2",{attrs:{id:"whistle-插件基本原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whistle-插件基本原理"}},[e._v("#")]),e._v(" whistle 插件基本原理")]),e._v(" "),t("p",[e._v("whistle 是基于 Node.js 实现的，然而 whistle 插件是一个独立的进程，这样保证了插件不会影响到 whistle 主进程的稳定性。")]),e._v(" "),t("p",[e._v("whistle 插件会暴露一系列的 http server 来实现与 whistle 的交互。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(307),alt:"server.png"}})]),e._v(" "),t("p",[e._v("从上面图可知，whistle 插件可以通过以上的一个个 server，来实现相关的功能。")]),e._v(" "),t("p",[e._v("这里介绍与下文即将实现的插件相关的 server。")]),e._v(" "),t("ul",[t("li",[e._v("Server：whistle 会把指定请求转发到该 server。（通过实现该 server 可以对请求响应进行修改等。）")]),e._v(" "),t("li",[e._v("UIServer：可作为静态服务为插件提供 UI 界面以及 API 等。")])]),e._v(" "),t("p",[e._v("所以一个插件的基本代码框架可大致如下。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(308),alt:"server-example.png"}})]),e._v(" "),t("p",[e._v("关于各个 server 的更多介绍可查看 "),t("a",{attrs:{href:"http://wproxy.org/whistle/plugins.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle 插件开发"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"whistle-插件开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whistle-插件开发"}},[e._v("#")]),e._v(" whistle 插件开发")]),e._v(" "),t("h3",{attrs:{id:"插件功能分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插件功能分析"}},[e._v("#")]),e._v(" 插件功能分析")]),e._v(" "),t("p",[e._v("下面将实现一个用于修改请求响应的 whistle 插件，详情可查看 "),t("a",{attrs:{href:"https://www.npmjs.com/package/whistle.modify",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle.modify"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("ol",[t("li",[e._v("首先是 Rule 的增删改查，Rule 用于描述是如何匹配请求，匹配之后该如何修改这个请求的响应等。")]),e._v(" "),t("li",[e._v("当 Rule 变多之后，会变得难以查找，为此增加了 Group 分组，用于分类管理 Rule。一个 Group 相当于一个文件夹，里面包含了多个 Rule。\n为此这里还有 Group 的增删改查。")]),e._v(" "),t("li",[e._v("根据匹配的 Rule 来对请求响应进行修改。")])]),e._v(" "),t("h3",{attrs:{id:"技术任务拆解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技术任务拆解"}},[e._v("#")]),e._v(" 技术任务拆解")]),e._v(" "),t("p",[t("img",{attrs:{src:r(309),alt:"structure.png"}})]),e._v(" "),t("h4",{attrs:{id:"ui-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ui-server"}},[e._v("#")]),e._v(" UI Server")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("首先要实现对 Rule 以及 Group 的增删改查，这里可以选择一些成熟的 Node.js Web 框架，比如 "),t("a",{attrs:{href:"https://expressjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Express"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"http://koajs.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Koa"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"https://nestjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("NestJS"),t("OutboundLink")],1),e._v("。这里选用了 NestJS，因为它有以下优势。")]),e._v(" "),t("ul",[t("li",[e._v("TypeScript 友好。")]),e._v(" "),t("li",[e._v("装饰器、AOP 等特性让代码更加清晰。")]),e._v(" "),t("li",[e._v("拥有完整的开发范式。")])])]),e._v(" "),t("li",[t("p",[e._v("静态服务器，NestJS 官方的 "),t("a",{attrs:{href:"https://www.npmjs.com/package/@nestjs/serve-static",target:"_blank",rel:"noopener noreferrer"}},[e._v("@nestjs/serve-static"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("li",[t("p",[e._v("数据存储，在满足需求下选择了简单 "),t("a",{attrs:{href:"https://github.com/Belphemur/node-json-db",target:"_blank",rel:"noopener noreferrer"}},[e._v("node-json-db"),t("OutboundLink")],1),e._v("，直接存储一个 JSON 文件到使用者本地。")])])]),e._v(" "),t("h4",{attrs:{id:"server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server"}},[e._v("#")]),e._v(" Server")]),e._v(" "),t("ol",[t("li",[e._v("通过读取 whistle 传入的 request 对象判断该请求是否与本地存储的 Rule 匹配。")]),e._v(" "),t("li",[e._v("如匹配，则修改 whistle 传入的 response 对象的响应为所匹配的 Rule 配置中的响应体。")])]),e._v(" "),t("h3",{attrs:{id:"项目创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目创建"}},[e._v("#")]),e._v(" 项目创建")]),e._v(" "),t("p",[e._v("通过 whistle 官方提供的 "),t("a",{attrs:{href:"https://github.com/avwo/lack",target:"_blank",rel:"noopener noreferrer"}},[e._v("lack"),t("OutboundLink")],1),e._v(" 可以快速生成一个 whistle 插件项目，然后我们可再按需进行修改。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/avwo/lack",target:"_blank",rel:"noopener noreferrer"}},[e._v("lack"),t("OutboundLink")],1),e._v(" 也能监听本地插件的修改，让插件自动重启，便于本地调试。")]),e._v(" "),t("p",[e._v("因为此插件包含了 web 界面，所以对脚手架生成的项目结构进行调整，具体如下。")]),e._v(" "),t("div",{staticClass:"language-txt extra-class"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[e._v("whistle.modify\n├─ client // 前端\n│    ├─ index.html\n│    ├─ src\n│    ├─ tsconfig.json\n│    └─ tsconfig.node.json\n├─ server // 服务端\n│    ├─ src\n│    │    ├─ server.ts\n│    │    └─ ui-server.ts\n│    ├─ test\n│    ├─ tsconfig.build.json\n│    ├─ tsconfig.json\n│    └─ typings\n├─ .eslintrc.js\n├─ .gitignore\n├─ .prettierrc\n├─ README.md\n├─ nest-cli.json\n├─ package.json\n├─ pnpm-lock.yaml\n├─ rules.txt\n└─ vite.config.ts\n")])])]),t("p",[e._v("具体源码可查看 "),t("a",{attrs:{href:"https://github.com/xuwenchao66/whistle.modify",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/xuwenchao66/whistle.modify"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"whistle-插件还能做什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#whistle-插件还能做什么"}},[e._v("#")]),e._v(" whistle 插件还能做什么")]),e._v(" "),t("ol",[t("li",[e._v("简化、统一开发团队的环境切换。")]),e._v(" "),t("li",[e._v("请求数据解密。")]),e._v(" "),t("li",[e._v("任何跟网络请求有关的，都可以发挥你的想象。")])]),e._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"http://wproxy.org/whistle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://wproxy.org/whistle/plugins.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle 插件开发"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/whistle-plugins/examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("whistle-plugins examples"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/avwo/lack",target:"_blank",rel:"noopener noreferrer"}},[e._v("lack - 生成 whistle 插件的脚手架"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);