(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{276:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"docker-入门实践-0-使用公共镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-入门实践-0-使用公共镜像","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker 入门实践(0): 使用公共镜像")]),e._v(" "),r("p",[e._v("在简单了解 "),r("code",[e._v("Docker")]),e._v(" 之后，跟学习任何语言一样，都必须先来一个 "),r("code",[e._v("Hello world")]),e._v(" 进一步加深、巩固自己的理解。\n下面使用官方公共镜像来快速将我们的第一个容器运行起来。")]),e._v(" "),r("h2",{attrs:{id:"获取镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#获取镜像","aria-hidden":"true"}},[e._v("#")]),e._v(" 获取镜像")]),e._v(" "),r("p",[e._v("镜像的存在是启动容器的前提，所以我们先要获取一个镜像，为此执行如下命令。")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[e._v("docker image pull docker/getting-started\n")])])]),r("p",[e._v("成功之后执行 "),r("code",[e._v("docker images")]),e._v(" 查看当前镜像，可以发现多了一个叫做 "),r("code",[e._v("docker/getting-started")]),e._v(" 的镜像。")]),e._v(" "),r("h2",{attrs:{id:"运行容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运行容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 运行容器")]),e._v(" "),r("p",[e._v("执行 "),r("code",[e._v("run")]),e._v(" 命令，启动 "),r("code",[e._v("getting-started")]),e._v(" 镜像，生成一个容器。")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[e._v("docker run -d -p "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v(":80 docker/getting-started\n")])])]),r("ul",[r("li",[r("code",[e._v("-d")]),e._v(" 让容器在后台运行。")]),e._v(" "),r("li",[r("code",[e._v("-p 10086:80")]),e._v(" 让宿主机器的 10086 端口映射至容器的 80 端口。")]),e._v(" "),r("li",[r("code",[e._v("docker/getting-started")]),e._v(" 需要使用的镜像名，如该镜像在本地中不存在则会自动从远程镜像仓库中获取，所以"),r("code",[e._v("image pull")]),e._v("操作是可省略的。")])]),e._v(" "),r("p",[e._v("执行过后，继续执行 "),r("code",[e._v("docker container ls")]),e._v(" 查看当前容器信息、状态，可以发现多了一个 "),r("code",[e._v("status")]),e._v(" 为 "),r("code",[e._v("up")]),e._v("（启动）状态的容器，说明容器启动成功了。")]),e._v(" "),r("p",[e._v("因为 "),r("code",[e._v("docker/getting-started")]),e._v(" 默认在容器中暴露了 80 供以访问，而且我们对其进行了端口映射， 所以我们通过宿主机器的 ip 加上映射的端口号，比如在浏览器中访问 http://192.168.0.103:10086/ ，就可以看到由 "),r("code",[e._v("docker/getting-started")]),e._v(" 容器提供的一个 "),r("code",[e._v("web")]),e._v(" 页面。")]),e._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://docs.docker.com/get-started/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/get-started/"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker 入门教程"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);